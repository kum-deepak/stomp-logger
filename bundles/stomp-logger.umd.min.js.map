{"version":3,"sources":["webpack://StompLogger/webpack/universalModuleDefinition","webpack://StompLogger/webpack/bootstrap","webpack://StompLogger/./src/lib/logger/log-level.ts","webpack://StompLogger/./src/lib/logger/logger-config.ts","webpack://StompLogger/./src/lib/logger/logger.ts","webpack://StompLogger/./src/lib/stomp-appender/stomp-appender-config.ts","webpack://StompLogger/./src/lib/stomp-appender/stomp-appender.ts","webpack://StompLogger/./src/lib/console-appender/console-appender-config.ts","webpack://StompLogger/./src/lib/console-appender/console-appender.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LogLevel","LoggerConfig","config","severity","message","appenders","forEach","appender","level","add","DEBUG","INFO","WARN","ERROR","FATAL","StompAppenderConfig","StompAppender","rxStomp","headers","msg","formatter","publish","destination","dest","body","ConsoleAppenderConfig","MAP","console","debug","info","warn","error","ConsoleAppender","toLog"],"mappings":"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","file":"stomp-logger.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompLogger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompLogger\"] = factory();\n\telse\n\t\troot[\"StompLogger\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  FATAL = 4,\n}\n","import { IAppender } from '../appender/i-appender';\n\nexport class LoggerConfig {\n  appenders: IAppender[];\n}\n","import { LoggerConfig } from './logger-config';\nimport { LogLevel } from './log-level';\n\nexport class Logger {\n  constructor(public config: LoggerConfig) {}\n\n  public add(severity: LogLevel, message: string): void {\n    this.config.appenders.forEach(appender => {\n      if (severity >= appender.config.level) {\n        appender.add(severity, message);\n      }\n    });\n  }\n\n  public debug(message: string): void {\n    this.add(LogLevel.DEBUG, message);\n  }\n\n  public info(message: string): void {\n    this.add(LogLevel.INFO, message);\n  }\n\n  public warn(message: string): void {\n    this.add(LogLevel.WARN, message);\n  }\n\n  public error(message: string): void {\n    this.add(LogLevel.ERROR, message);\n  }\n\n  public fatal(message: string): void {\n    this.add(LogLevel.FATAL, message);\n  }\n}\n","import { StompHeaders } from '@stomp/stompjs';\nimport { IAppenderConfig } from '../appender/i-appender-config';\nimport { LogLevel } from '../logger/log-level';\n\nexport class StompAppenderConfig implements IAppenderConfig {\n  level: LogLevel;\n  dest: string;\n  formatter: (message: string) => { headers: StompHeaders; message: string };\n}\n","import { RxStomp } from '@stomp/rx-stomp';\n\nimport { LogLevel } from '../logger/log-level';\nimport { IAppender } from '../appender/i-appender';\nimport { StompAppenderConfig } from './stomp-appender-config';\n\nexport class StompAppender implements IAppender {\n  constructor(public config: StompAppenderConfig, private rxStomp: RxStomp) {}\n\n  add(severity: LogLevel, message: string) {\n    const { headers: headers, message: msg } = this.config.formatter(message);\n\n    this.rxStomp.publish({\n      destination: this.config.dest,\n      headers: { ...headers, severity: `${severity}` },\n      body: msg,\n    });\n  }\n}\n","import { IAppenderConfig } from '../appender/i-appender-config';\nimport { LogLevel } from '../logger/log-level';\n\nexport class ConsoleAppenderConfig implements IAppenderConfig {\n  level: LogLevel;\n  formatter?: (message: string) => any[];\n}\n","import { LogLevel } from '../logger/log-level';\nimport { IAppender } from '../appender/i-appender';\nimport { ConsoleAppenderConfig } from './console-appender-config';\n\n// methods to call on console for corresponding logger methods.\n// `fatal` is mapped to `error`\nconst MAP = [\n  // tslint:disable-next-line:no-console\n  console.debug,\n  // tslint:disable-next-line:no-console\n  console.info,\n  // tslint:disable-next-line:no-console\n  console.warn,\n  // tslint:disable-next-line:no-console\n  console.error,\n  // tslint:disable-next-line:no-console\n  console.error,\n];\n\nexport class ConsoleAppender implements IAppender {\n  constructor(public config: ConsoleAppenderConfig) {}\n\n  add(severity: LogLevel, message: string) {\n    const toLog =\n      typeof this.config.formatter === 'function'\n        ? this.config.formatter(message)\n        : [message];\n\n    MAP[severity].call(console, ...toLog);\n  }\n}\n"],"sourceRoot":""}