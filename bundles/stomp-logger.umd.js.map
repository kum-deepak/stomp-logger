{"version":3,"sources":["webpack://StompLogger/webpack/universalModuleDefinition","webpack://StompLogger/webpack/bootstrap","webpack://StompLogger/./src/index.ts","webpack://StompLogger/./src/lib/console-appender/console-appender-config.ts","webpack://StompLogger/./src/lib/console-appender/console-appender.ts","webpack://StompLogger/./src/lib/logger/log-level.ts","webpack://StompLogger/./src/lib/logger/logger-config.ts","webpack://StompLogger/./src/lib/logger/logger.ts","webpack://StompLogger/./src/lib/stomp-appender/stomp-appender-config.ts","webpack://StompLogger/./src/lib/stomp-appender/stomp-appender.ts"],"names":[],"mappings":"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","file":"stomp-logger.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompLogger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompLogger\"] = factory();\n\telse\n\t\troot[\"StompLogger\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Public API Surface of logger\n */\n\nexport * from './lib/appender/i-appender-config';\nexport * from './lib/appender/i-appender';\n\nexport * from './lib/logger/log-level';\nexport * from './lib/logger/logger-config';\nexport * from './lib/logger/logger';\n\nexport * from './lib/stomp-appender/stomp-appender-config';\nexport * from './lib/stomp-appender/stomp-appender';\n\nexport * from './lib/console-appender/console-appender-config';\nexport * from './lib/console-appender/console-appender';\n","import { IAppenderConfig } from '../appender/i-appender-config';\nimport { LogLevel } from '../logger/log-level';\n\nexport class ConsoleAppenderConfig implements IAppenderConfig {\n  level: LogLevel;\n  formatter?: (message: string) => any[];\n}\n","import { LogLevel } from '../logger/log-level';\nimport { IAppender } from '../appender/i-appender';\nimport { ConsoleAppenderConfig } from './console-appender-config';\n\n// methods to call on console for corresponding logger methods.\n// `fatal` is mapped to `error`\nconst MAP = [\n  // tslint:disable-next-line:no-console\n  console.debug,\n  // tslint:disable-next-line:no-console\n  console.info,\n  // tslint:disable-next-line:no-console\n  console.warn,\n  // tslint:disable-next-line:no-console\n  console.error,\n  // tslint:disable-next-line:no-console\n  console.error,\n];\n\nexport class ConsoleAppender implements IAppender {\n  constructor(public config: ConsoleAppenderConfig) {}\n\n  add(severity: LogLevel, message: string) {\n    const toLog =\n      typeof this.config.formatter === 'function'\n        ? this.config.formatter(message)\n        : [message];\n\n    MAP[severity].call(console, ...toLog);\n  }\n}\n","export enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  FATAL = 4,\n}\n","import { IAppender } from '../appender/i-appender';\n\nexport class LoggerConfig {\n  appenders: IAppender[];\n}\n","import { LoggerConfig } from './logger-config';\nimport { LogLevel } from './log-level';\n\nexport class Logger {\n  constructor(public config: LoggerConfig) {}\n\n  public add(severity: LogLevel, message: string): void {\n    this.config.appenders.forEach(appender => {\n      if (severity >= appender.config.level) {\n        appender.add(severity, message);\n      }\n    });\n  }\n\n  public debug(message: string): void {\n    this.add(LogLevel.DEBUG, message);\n  }\n\n  public info(message: string): void {\n    this.add(LogLevel.INFO, message);\n  }\n\n  public warn(message: string): void {\n    this.add(LogLevel.WARN, message);\n  }\n\n  public error(message: string): void {\n    this.add(LogLevel.ERROR, message);\n  }\n\n  public fatal(message: string): void {\n    this.add(LogLevel.FATAL, message);\n  }\n}\n","import { StompHeaders } from '@stomp/stompjs';\nimport { IAppenderConfig } from '../appender/i-appender-config';\nimport { LogLevel } from '../logger/log-level';\n\nexport class StompAppenderConfig implements IAppenderConfig {\n  level: LogLevel;\n  dest: string;\n  formatter: (message: string) => { headers: StompHeaders; message: string };\n}\n","import { RxStomp } from '@stomp/rx-stomp';\n\nimport { LogLevel } from '../logger/log-level';\nimport { IAppender } from '../appender/i-appender';\nimport { StompAppenderConfig } from './stomp-appender-config';\n\nexport class StompAppender implements IAppender {\n  constructor(public config: StompAppenderConfig, private rxStomp: RxStomp) {}\n\n  add(severity: LogLevel, message: string) {\n    const { headers: headers, message: msg } = this.config.formatter(message);\n\n    this.rxStomp.publish({\n      destination: this.config.dest,\n      headers: { ...headers, severity: `${severity}` },\n      body: msg,\n    });\n  }\n}\n"],"sourceRoot":""}